

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Oct 27 17:46:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F46K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _EEDATA	set	4008
    52   000000                     _EEADR	set	4009
    53   000000                     _EEADRH	set	4010
    54   000000                     _EECON2	set	4007
    55   000000                     _TRISD	set	3989
    56   000000                     _TRISC	set	3988
    57   000000                     _TRISB	set	3987
    58   000000                     _LATC	set	3979
    59   000000                     _LATB	set	3978
    60   000000                     _CCP1CONbits	set	4029
    61   000000                     _RB4	set	31756
    62   000000                     _RB3	set	31755
    63   000000                     _RB2	set	31754
    64   000000                     _RB1	set	31753
    65   000000                     _RD1	set	31769
    66   000000                     _RD0	set	31768
    67   000000                     _TMR2ON	set	32338
    68   000000                     _T2CKPS1	set	32337
    69   000000                     _TRISC2	set	31906
    70   000000                     _CCP1M2	set	32234
    71   000000                     _TRISD1	set	31913
    72   000000                     _TRISD0	set	31912
    73   000000                     _WPUB	set	3964
    74   000000                     _ANSEL	set	3966
    75   000000                     _LATA	set	3977
    76   000000                     _LATD	set	3980
    77   000000                     _LATE	set	3981
    78   000000                     _TRISA	set	3986
    79   000000                     _TRISE	set	3990
    80   000000                     _OSCTUNE	set	3995
    81   000000                     _OSCCON	set	4051
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _PORTDbits	set	3971
    84   000000                     _ANSELH	set	3967
    85   000000                     _RB0	set	31752
    86   000000                     _TABLAT	set	4085
    87   000000                     _TBLPTRL	set	4086
    88   000000                     _TBLPTRH	set	4087
    89   000000                     _TBLPTRU	set	4088
    90   000000                     _INTCONbits	set	4082
    91   000000                     _PIR2bits	set	4001
    92   000000                     _EECON1bits	set	4006
    93   000000                     _CCP1M3	set	32235
    94   000000                     _CCPR1L	set	4030
    95   000000                     _PR2	set	4043
    96   000000                     _T2CKPS0	set	32336
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   0011A4                     __pcinit:
   102                           	callstack 0
   103   0011A4                     start_initialization:
   104                           	callstack 0
   105   0011A4                     __initialization:
   106                           	callstack 0
   107   0011A4                     end_of_initialization:
   108                           	callstack 0
   109   0011A4                     __end_of__initialization:
   110                           	callstack 0
   111   0011A4  0100               	movlb	0
   112   0011A6  EF01  F008         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	cstackCOMRAM
   115   000001                     __pcstackCOMRAM:
   116                           	callstack 0
   117   000001                     PWM_Duty_cycle@DC_val:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121   000001                     	ds	2
   122   000003                     ??_PWM_Duty_cycle:
   123                           
   124                           ; 1 bytes @ 0x2
   125   000003                     	ds	2
   126   000005                     ??_main:
   127                           
   128                           ; 1 bytes @ 0x4
   129   000005                     	ds	2
   130                           
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 57 in file "main.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  1    wreg      void 
   143 ;; Registers used:
   144 ;;		wreg, status,2, status,0, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   154 ;;Total ram usage:        2 bytes
   155 ;; Hardware stack levels required when called: 2
   156 ;; This function calls:
   157 ;;		_PWM_Duty_cycle
   158 ;;		_SYSTEM_Initialize
   159 ;; This function is called by:
   160 ;;		Startup code after reset
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           	psect	text0
   165   001002                     __ptext0:
   166                           	callstack 0
   167   001002                     _main:
   168                           	callstack 29
   169   001002                     
   170                           ;main.c: 60:     SYSTEM_Initialize();
   171   001002  ECC8  F008         	call	_SYSTEM_Initialize	;wreg free
   172   001006                     
   173                           ;main.c: 77:     TRISB = 0x1F;
   174   001006  0E1F               	movlw	31
   175   001008  6E93               	movwf	147,c	;volatile
   176   00100A                     
   177                           ;main.c: 78:     TRISD0 = 0;
   178   00100A  9095               	bcf	3989,0,c	;volatile
   179   00100C                     
   180                           ;main.c: 79:     TRISD1 = 0;
   181   00100C  9295               	bcf	3989,1,c	;volatile
   182   00100E                     
   183                           ;main.c: 81:     PORTDbits.RD0 = 0;
   184   00100E  9083               	bcf	131,0,c	;volatile
   185   001010                     
   186                           ;main.c: 82:     PORTDbits.RD1 = 1;
   187   001010  8283               	bsf	131,1,c	;volatile
   188   001012                     
   189                           ;main.c: 85:   CCP1M3 = 1;
   190   001012  86BD               	bsf	4029,3,c	;volatile
   191   001014                     
   192                           ;main.c: 86:   CCP1M2 = 1;
   193   001014  84BD               	bsf	4029,2,c	;volatile
   194   001016                     
   195                           ;main.c: 87:   TRISC2 = 0;
   196   001016  9494               	bcf	3988,2,c	;volatile
   197   001018                     
   198                           ;main.c: 89:   PR2 = 124;
   199   001018  0E7C               	movlw	124
   200   00101A  6ECB               	movwf	203,c	;volatile
   201   00101C                     
   202                           ;main.c: 91:   T2CKPS0 = 1;
   203   00101C  80CA               	bsf	4042,0,c	;volatile
   204   00101E                     
   205                           ;main.c: 92:   T2CKPS1 = 0;
   206   00101E  92CA               	bcf	4042,1,c	;volatile
   207   001020                     
   208                           ;main.c: 94:   TMR2ON = 1;
   209   001020  84CA               	bsf	4042,2,c	;volatile
   210   001022                     l1108:
   211                           
   212                           ;main.c: 98:     {;main.c: 99:         if(RB0)
   213   001022  A081               	btfss	3969,0,c	;volatile
   214   001024  EF16  F008         	goto	u231
   215   001028  EF18  F008         	goto	u230
   216   00102C                     u231:
   217   00102C  EF35  F008         	goto	l1114
   218   001030                     u230:
   219   001030                     
   220                           ;main.c: 100:     {;main.c: 101:       RD0 = ~RD0;
   221   001030  A083               	btfss	3971,0,c	;volatile
   222   001032  EF1D  F008         	goto	u241
   223   001036  EF20  F008         	goto	u240
   224   00103A                     u241:
   225   00103A  8083               	bsf	3971,0,c	;volatile
   226   00103C  EF21  F008         	goto	u255
   227   001040                     u240:
   228   001040  9083               	bcf	3971,0,c	;volatile
   229   001042                     u255:
   230                           
   231                           ;main.c: 102:       RD1 = ~RD1;
   232   001042  A283               	btfss	3971,1,c	;volatile
   233   001044  EF26  F008         	goto	u261
   234   001048  EF29  F008         	goto	u260
   235   00104C                     u261:
   236   00104C  8283               	bsf	3971,1,c	;volatile
   237   00104E  EF2A  F008         	goto	u275
   238   001052                     u260:
   239   001052  9283               	bcf	3971,1,c	;volatile
   240   001054                     u275:
   241   001054                     
   242                           ;main.c: 103:       _delay((unsigned long)((500)*(4000000/4000.0)));
   243   001054  0E03               	movlw	3
   244   001056  6E06               	movwf	(??_main+1)^0,c
   245   001058  0E8A               	movlw	138
   246   00105A  6E05               	movwf	??_main^0,c
   247   00105C  0E56               	movlw	86
   248   00105E                     u327:
   249   00105E  2EE8               	decfsz	wreg,f,c
   250   001060  D7FE               	bra	u327
   251   001062  2E05               	decfsz	??_main^0,f,c
   252   001064  D7FC               	bra	u327
   253   001066  2E06               	decfsz	(??_main+1)^0,f,c
   254   001068  D7FA               	bra	u327
   255   00106A                     l1114:
   256                           
   257                           ;main.c: 105:     if(RB1)
   258   00106A  A281               	btfss	3969,1,c	;volatile
   259   00106C  EF3A  F008         	goto	u281
   260   001070  EF3C  F008         	goto	u280
   261   001074                     u281:
   262   001074  EF49  F008         	goto	l1120
   263   001078                     u280:
   264   001078                     
   265                           ;main.c: 106:     {;main.c: 107:       PWM_Duty_cycle(0);
   266   001078  0E00               	movlw	0
   267   00107A  6E02               	movwf	(PWM_Duty_cycle@DC_val+1)^0,c
   268   00107C  0E00               	movlw	0
   269   00107E  6E01               	movwf	PWM_Duty_cycle@DC_val^0,c
   270   001080  EC90  F008         	call	_PWM_Duty_cycle	;wreg free
   271   001084                     
   272                           ;main.c: 108:       _delay((unsigned long)((100)*(4000000/4000.0)));
   273   001084  0E82               	movlw	130
   274   001086  6E05               	movwf	??_main^0,c
   275   001088  0EDE               	movlw	222
   276   00108A                     u337:
   277   00108A  2EE8               	decfsz	wreg,f,c
   278   00108C  D7FE               	bra	u337
   279   00108E  2E05               	decfsz	??_main^0,f,c
   280   001090  D7FC               	bra	u337
   281   001092                     l1120:
   282                           
   283                           ;main.c: 110:     if(RB2)
   284   001092  A481               	btfss	3969,2,c	;volatile
   285   001094  EF4E  F008         	goto	u291
   286   001098  EF50  F008         	goto	u290
   287   00109C                     u291:
   288   00109C  EF5D  F008         	goto	l1126
   289   0010A0                     u290:
   290   0010A0                     
   291                           ;main.c: 111:     {;main.c: 112:       PWM_Duty_cycle(250);
   292   0010A0  0E00               	movlw	0
   293   0010A2  6E02               	movwf	(PWM_Duty_cycle@DC_val+1)^0,c
   294   0010A4  0EFA               	movlw	250
   295   0010A6  6E01               	movwf	PWM_Duty_cycle@DC_val^0,c
   296   0010A8  EC90  F008         	call	_PWM_Duty_cycle	;wreg free
   297   0010AC                     
   298                           ;main.c: 113:       _delay((unsigned long)((100)*(4000000/4000.0)));
   299   0010AC  0E82               	movlw	130
   300   0010AE  6E05               	movwf	??_main^0,c
   301   0010B0  0EDE               	movlw	222
   302   0010B2                     u347:
   303   0010B2  2EE8               	decfsz	wreg,f,c
   304   0010B4  D7FE               	bra	u347
   305   0010B6  2E05               	decfsz	??_main^0,f,c
   306   0010B8  D7FC               	bra	u347
   307   0010BA                     l1126:
   308                           
   309                           ;main.c: 115:     if(RB3)
   310   0010BA  A681               	btfss	3969,3,c	;volatile
   311   0010BC  EF62  F008         	goto	u301
   312   0010C0  EF64  F008         	goto	u300
   313   0010C4                     u301:
   314   0010C4  EF71  F008         	goto	l1132
   315   0010C8                     u300:
   316   0010C8                     
   317                           ;main.c: 116:     {;main.c: 117:       PWM_Duty_cycle(375);
   318   0010C8  0E01               	movlw	1
   319   0010CA  6E02               	movwf	(PWM_Duty_cycle@DC_val+1)^0,c
   320   0010CC  0E77               	movlw	119
   321   0010CE  6E01               	movwf	PWM_Duty_cycle@DC_val^0,c
   322   0010D0  EC90  F008         	call	_PWM_Duty_cycle	;wreg free
   323   0010D4                     
   324                           ;main.c: 118:       _delay((unsigned long)((100)*(4000000/4000.0)));
   325   0010D4  0E82               	movlw	130
   326   0010D6  6E05               	movwf	??_main^0,c
   327   0010D8  0EDE               	movlw	222
   328   0010DA                     u357:
   329   0010DA  2EE8               	decfsz	wreg,f,c
   330   0010DC  D7FE               	bra	u357
   331   0010DE  2E05               	decfsz	??_main^0,f,c
   332   0010E0  D7FC               	bra	u357
   333   0010E2                     l1132:
   334                           
   335                           ;main.c: 120:     if (RB4)
   336   0010E2  A881               	btfss	3969,4,c	;volatile
   337   0010E4  EF76  F008         	goto	u311
   338   0010E8  EF78  F008         	goto	u310
   339   0010EC                     u311:
   340   0010EC  EF85  F008         	goto	l1138
   341   0010F0                     u310:
   342   0010F0                     
   343                           ;main.c: 121:     {;main.c: 122:       PWM_Duty_cycle(500);
   344   0010F0  0E01               	movlw	1
   345   0010F2  6E02               	movwf	(PWM_Duty_cycle@DC_val+1)^0,c
   346   0010F4  0EF4               	movlw	244
   347   0010F6  6E01               	movwf	PWM_Duty_cycle@DC_val^0,c
   348   0010F8  EC90  F008         	call	_PWM_Duty_cycle	;wreg free
   349   0010FC                     
   350                           ;main.c: 123:       _delay((unsigned long)((100)*(4000000/4000.0)));
   351   0010FC  0E82               	movlw	130
   352   0010FE  6E05               	movwf	??_main^0,c
   353   001100  0EDE               	movlw	222
   354   001102                     u367:
   355   001102  2EE8               	decfsz	wreg,f,c
   356   001104  D7FE               	bra	u367
   357   001106  2E05               	decfsz	??_main^0,f,c
   358   001108  D7FC               	bra	u367
   359   00110A                     l1138:
   360                           
   361                           ;main.c: 125:     _delay((unsigned long)((10)*(4000000/4000.0)));
   362   00110A  0E0D               	movlw	13
   363   00110C  6E05               	movwf	??_main^0,c
   364   00110E  0EFC               	movlw	252
   365   001110                     u377:
   366   001110  2EE8               	decfsz	wreg,f,c
   367   001112  D7FE               	bra	u377
   368   001114  2E05               	decfsz	??_main^0,f,c
   369   001116  D7FC               	bra	u377
   370   001118  EF11  F008         	goto	l1108
   371   00111C  EF00  F000         	goto	start
   372   001120                     __end_of_main:
   373                           	callstack 0
   374                           
   375 ;; *************** function _SYSTEM_Initialize *****************
   376 ;; Defined at:
   377 ;;		line 50 in file "mcc_generated_files/mcc.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 1
   398 ;; This function calls:
   399 ;;		_OSCILLATOR_Initialize
   400 ;;		_PIN_MANAGER_Initialize
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text1
   407   001190                     __ptext1:
   408                           	callstack 0
   409   001190                     _SYSTEM_Initialize:
   410                           	callstack 29
   411   001190                     
   412                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   413   001190  ECB0  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   414                           
   415                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   416   001194  ECCD  F008         	call	_OSCILLATOR_Initialize	;wreg free
   417   001198  0012               	return		;funcret
   418   00119A                     __end_of_SYSTEM_Initialize:
   419                           	callstack 0
   420                           
   421 ;; *************** function _PIN_MANAGER_Initialize *****************
   422 ;; Defined at:
   423 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_SYSTEM_Initialize
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text2
   451   001160                     __ptext2:
   452                           	callstack 0
   453   001160                     _PIN_MANAGER_Initialize:
   454                           	callstack 29
   455   001160                     
   456                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   457   001160  0E00               	movlw	0
   458   001162  6E8D               	movwf	141,c	;volatile
   459                           
   460                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   461   001164  0E00               	movlw	0
   462   001166  6E8C               	movwf	140,c	;volatile
   463                           
   464                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   465   001168  0E00               	movlw	0
   466   00116A  6E89               	movwf	137,c	;volatile
   467                           
   468                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   469   00116C  0E00               	movlw	0
   470   00116E  6E8A               	movwf	138,c	;volatile
   471                           
   472                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   473   001170  0E00               	movlw	0
   474   001172  6E8B               	movwf	139,c	;volatile
   475                           
   476                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   477   001174  0E07               	movlw	7
   478   001176  6E96               	movwf	150,c	;volatile
   479   001178                     
   480                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   481   001178  6892               	setf	146,c	;volatile
   482   00117A                     
   483                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   484   00117A  6893               	setf	147,c	;volatile
   485                           
   486                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xF0;
   487   00117C  0EF0               	movlw	240
   488   00117E  6E94               	movwf	148,c	;volatile
   489   001180                     
   490                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   491   001180  6895               	setf	149,c	;volatile
   492   001182                     
   493                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   494   001182  687E               	setf	126,c	;volatile
   495                           
   496                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   497   001184  0E1F               	movlw	31
   498   001186  6E7F               	movwf	127,c	;volatile
   499                           
   500                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   501   001188  0E00               	movlw	0
   502   00118A  6E7C               	movwf	124,c	;volatile
   503   00118C                     
   504                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   505   00118C  8EF1               	bsf	241,7,c	;volatile
   506   00118E  0012               	return		;funcret
   507   001190                     __end_of_PIN_MANAGER_Initialize:
   508                           	callstack 0
   509                           
   510 ;; *************** function _OSCILLATOR_Initialize *****************
   511 ;; Defined at:
   512 ;;		line 57 in file "mcc_generated_files/mcc.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_SYSTEM_Initialize
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text3
   540   00119A                     __ptext3:
   541                           	callstack 0
   542   00119A                     _OSCILLATOR_Initialize:
   543                           	callstack 29
   544   00119A                     
   545                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x30;
   546   00119A  0E30               	movlw	48
   547   00119C  6ED3               	movwf	211,c	;volatile
   548                           
   549                           ;mcc_generated_files/mcc.c: 62:     OSCTUNE = 0x00;
   550   00119E  0E00               	movlw	0
   551   0011A0  6E9B               	movwf	155,c	;volatile
   552   0011A2  0012               	return		;funcret
   553   0011A4                     __end_of_OSCILLATOR_Initialize:
   554                           	callstack 0
   555                           
   556 ;; *************** function _PWM_Duty_cycle *****************
   557 ;; Defined at:
   558 ;;		line 130 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  DC_val          2    0[COMRAM] unsigned short 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;Total ram usage:        4 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text4
   586   001120                     __ptext4:
   587                           	callstack 0
   588   001120                     _PWM_Duty_cycle:
   589                           	callstack 30
   590   001120                     
   591                           ;main.c: 131:     if (DC_val < 1024){
   592   001120  0E04               	movlw	4
   593   001122  5C02               	subwf	(PWM_Duty_cycle@DC_val+1)^0,w,c
   594   001124  B0D8               	btfsc	status,0,c
   595   001126  EF97  F008         	goto	u221
   596   00112A  EF99  F008         	goto	u220
   597   00112E                     u221:
   598   00112E  EFAF  F008         	goto	l113
   599   001132                     u220:
   600   001132                     
   601                           ;main.c: 132:         CCP1CONbits.DC1B = DC_val & 0x03;
   602   001132  C001  F003         	movff	PWM_Duty_cycle@DC_val,??_PWM_Duty_cycle
   603   001136  0E03               	movlw	3
   604   001138  1603               	andwf	??_PWM_Duty_cycle^0,f,c
   605   00113A  3A03               	swapf	??_PWM_Duty_cycle^0,f,c
   606   00113C  50BD               	movf	189,w,c	;volatile
   607   00113E  1803               	xorwf	??_PWM_Duty_cycle^0,w,c
   608   001140  0BCF               	andlw	-49
   609   001142  1803               	xorwf	??_PWM_Duty_cycle^0,w,c
   610   001144  6EBD               	movwf	189,c	;volatile
   611                           
   612                           ;main.c: 133:         CCPR1L = DC_val >> 2;
   613   001146  C001  F003         	movff	PWM_Duty_cycle@DC_val,??_PWM_Duty_cycle
   614   00114A  C002  F004         	movff	PWM_Duty_cycle@DC_val+1,??_PWM_Duty_cycle+1
   615   00114E  90D8               	bcf	status,0,c
   616   001150  3204               	rrcf	(??_PWM_Duty_cycle+1)^0,f,c
   617   001152  3203               	rrcf	??_PWM_Duty_cycle^0,f,c
   618   001154  90D8               	bcf	status,0,c
   619   001156  3204               	rrcf	(??_PWM_Duty_cycle+1)^0,f,c
   620   001158  3203               	rrcf	??_PWM_Duty_cycle^0,f,c
   621   00115A  5003               	movf	??_PWM_Duty_cycle^0,w,c
   622   00115C  6EBE               	movwf	190,c	;volatile
   623   00115E                     l113:
   624   00115E  0012               	return		;funcret
   625   001160                     __end_of_PWM_Duty_cycle:
   626                           	callstack 0
   627                           
   628                           	psect	smallconst
   629   001000                     __psmallconst:
   630                           	callstack 0
   631   001000  00                 	db	0
   632   001001  00                 	db	0	; dummy byte at the end
   633   000000                     
   634                           	psect	rparam
   635   000000                     
   636                           	psect	config
   637                           
   638                           ; Padding undefined space
   639   300000                     	org	3145728
   640   300000  FF                 	db	255
   641                           
   642                           ;Config register CONFIG1H @ 0x300001
   643                           ;	Oscillator Selection bits
   644                           ;	FOSC = HS, HS oscillator
   645                           ;	Fail-Safe Clock Monitor Enable bit
   646                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   647                           ;	Internal/External Oscillator Switchover bit
   648                           ;	IESO = OFF, Oscillator Switchover mode disabled
   649   300001                     	org	3145729
   650   300001  02                 	db	2
   651                           
   652                           ;Config register CONFIG2L @ 0x300002
   653                           ;	Power-up Timer Enable bit
   654                           ;	PWRTEN = OFF, PWRT disabled
   655                           ;	Brown-out Reset Enable bits
   656                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   657                           ;	Brown Out Reset Voltage bits
   658                           ;	BORV = 18, VBOR set to 1.8 V nominal
   659   300002                     	org	3145730
   660   300002  1F                 	db	31
   661                           
   662                           ;Config register CONFIG2H @ 0x300003
   663                           ;	Watchdog Timer Enable bit
   664                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   665                           ;	Watchdog Timer Postscale Select bits
   666                           ;	WDTPS = 32768, 1:32768
   667   300003                     	org	3145731
   668   300003  1E                 	db	30
   669                           
   670                           ; Padding undefined space
   671   300004                     	org	3145732
   672   300004  FF                 	db	255
   673                           
   674                           ;Config register CONFIG3H @ 0x300005
   675                           ;	CCP2 MUX bit
   676                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   677                           ;	PORTB A/D Enable bit
   678                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   679                           ;	Low-Power Timer1 Oscillator Enable bit
   680                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   681                           ;	HFINTOSC Fast Start-up
   682                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   683                           ;	MCLR Pin Enable bit
   684                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   685   300005                     	org	3145733
   686   300005  8B                 	db	139
   687                           
   688                           ;Config register CONFIG4L @ 0x300006
   689                           ;	Stack Full/Underflow Reset Enable bit
   690                           ;	STVREN = ON, Stack full/underflow will cause Reset
   691                           ;	Single-Supply ICSP Enable bit
   692                           ;	LVP = ON, Single-Supply ICSP enabled
   693                           ;	Extended Instruction Set Enable bit
   694                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   695                           ;	Background Debugger Enable bit
   696                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   697   300006                     	org	3145734
   698   300006  85                 	db	133
   699                           
   700                           ; Padding undefined space
   701   300007                     	org	3145735
   702   300007  FF                 	db	255
   703                           
   704                           ;Config register CONFIG5L @ 0x300008
   705                           ;	Code Protection Block 0
   706                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   707                           ;	Code Protection Block 1
   708                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   709                           ;	Code Protection Block 2
   710                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   711                           ;	Code Protection Block 3
   712                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   713   300008                     	org	3145736
   714   300008  0F                 	db	15
   715                           
   716                           ;Config register CONFIG5H @ 0x300009
   717                           ;	Boot Block Code Protection bit
   718                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   719                           ;	Data EEPROM Code Protection bit
   720                           ;	CPD = OFF, Data EEPROM not code-protected
   721   300009                     	org	3145737
   722   300009  C0                 	db	192
   723                           
   724                           ;Config register CONFIG6L @ 0x30000A
   725                           ;	Write Protection Block 0
   726                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   727                           ;	Write Protection Block 1
   728                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   729                           ;	Write Protection Block 2
   730                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   731                           ;	Write Protection Block 3
   732                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
   733   30000A                     	org	3145738
   734   30000A  0F                 	db	15
   735                           
   736                           ;Config register CONFIG6H @ 0x30000B
   737                           ;	Configuration Register Write Protection bit
   738                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   739                           ;	Boot Block Write Protection bit
   740                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   741                           ;	Data EEPROM Write Protection bit
   742                           ;	WRTD = OFF, Data EEPROM not write-protected
   743   30000B                     	org	3145739
   744   30000B  E0                 	db	224
   745                           
   746                           ;Config register CONFIG7L @ 0x30000C
   747                           ;	Table Read Protection Block 0
   748                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   749                           ;	Table Read Protection Block 1
   750                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   751                           ;	Table Read Protection Block 2
   752                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   753                           ;	Table Read Protection Block 3
   754                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   755   30000C                     	org	3145740
   756   30000C  0F                 	db	15
   757                           
   758                           ;Config register CONFIG7H @ 0x30000D
   759                           ;	Boot Block Table Read Protection bit
   760                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   761   30000D                     	org	3145741
   762   30000D  40                 	db	64
   763                           tosu	equ	0xFFF
   764                           tosh	equ	0xFFE
   765                           tosl	equ	0xFFD
   766                           stkptr	equ	0xFFC
   767                           pclatu	equ	0xFFB
   768                           pclath	equ	0xFFA
   769                           pcl	equ	0xFF9
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           prodh	equ	0xFF4
   775                           prodl	equ	0xFF3
   776                           indf0	equ	0xFEF
   777                           postinc0	equ	0xFEE
   778                           postdec0	equ	0xFED
   779                           preinc0	equ	0xFEC
   780                           plusw0	equ	0xFEB
   781                           fsr0h	equ	0xFEA
   782                           fsr0l	equ	0xFE9
   783                           wreg	equ	0xFE8
   784                           indf1	equ	0xFE7
   785                           postinc1	equ	0xFE6
   786                           postdec1	equ	0xFE5
   787                           preinc1	equ	0xFE4
   788                           plusw1	equ	0xFE3
   789                           fsr1h	equ	0xFE2
   790                           fsr1l	equ	0xFE1
   791                           bsr	equ	0xFE0
   792                           indf2	equ	0xFDF
   793                           postinc2	equ	0xFDE
   794                           postdec2	equ	0xFDD
   795                           preinc2	equ	0xFDC
   796                           plusw2	equ	0xFDB
   797                           fsr2h	equ	0xFDA
   798                           fsr2l	equ	0xFD9
   799                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM_Duty_cycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     370
                                              4 COMRAM     2     2      0
                     _PWM_Duty_cycle
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Duty_cycle                                       4     2      2     370
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Duty_cycle
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITBIGSFRhhhh        7      0       0      37        0.0%
BITBIGSFRhhhl        2      0       0      38        0.0%
BITBIGSFRhhlh       1D      0       0      39        0.0%
BITBIGSFRhhllhh      7      0       0      40        0.0%
BITBIGSFRhhllhh      B      0       0      41        0.0%
BITBIGSFRhhllhl     12      0       0      42        0.0%
BITBIGSFRhhllhl      4      0       0      43        0.0%
BITBIGSFRhhllhl      5      0       0      44        0.0%
BITBIGSFRhhlll       4      0       0      45        0.0%
BITBIGSFRhll         4      0       0      46        0.0%
BITBIGSFRllhh        5      0       0      47        0.0%
BITBIGSFRllhlh       1      0       0      48        0.0%
BITBIGSFRllhll       1      0       0      49        0.0%
BITBIGSFRlllh        1      0       0      50        0.0%
BITBIGSFRllll       1C      0       0      51        0.0%
BIGRAM             F5F      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Oct 27 17:46:31 2024

                            l33 118E                              l50 11A2                              l47 1198  
                           l113 115E                             l860 1180                             l862 1182  
                           l854 1160                             l864 118C                             l856 1178  
                           l866 119A                             l858 117A                             l868 1190  
                           _RB0 7C08                             _RB1 7C09                             _RB2 7C0A  
                           _RB3 7C0B                             _RD0 7C18                             _RB4 7C0C  
                           _RD1 7C19                             u220 1132                             u300 10C8  
                           u221 112E                             u301 10C4                             u310 10F0  
                           u230 1030                             u311 10EC                             u231 102C  
                           u240 1040                             u241 103A                             u260 1052  
                           u261 104C                             _PR2 0FCB                             u327 105E  
                           u255 1042                             u280 1078                             u337 108A  
                           u281 1074                             u290 10A0                             u347 10B2  
                           u291 109C                             u275 1054                             u357 10DA  
                           u367 1102                             u377 1110                             wreg 0FE8  
                          l1100 1018                            l1110 1030                            l1102 101C  
                          l1120 1092                            l1112 1054                            l1104 101E  
                          l1130 10D4                            l1122 10A0                            l1114 106A  
                          l1106 1020                            l1132 10E2                            l1124 10AC  
                          l1116 1078                            l1108 1022                            l1134 10F0  
                          l1126 10BA                            l1118 1084                            l1080 1132  
                          l1136 10FC                            l1128 10C8                            l1138 110A  
                          l1090 100E                            l1082 1002                            l1092 1010  
                          l1084 1006                            l1078 1120                            l1094 1012  
                          l1086 100A                            l1096 1014                            l1088 100C  
                          l1098 1016                            _LATA 0F89                            _LATB 0F8A  
                          _LATC 0F8B                            _LATD 0F8C                            _LATE 0F8D  
                          _WPUB 0F7C                            _main 1002                            start 0000  
                  ___param_bank 0000   __end_of_OSCILLATOR_Initialize 11A4                           ?_main 0001  
                         _EEADR 0FA9                           _ANSEL 0F7E                           _TRISA 0F92  
                         _TRISB 0F93                           _TRISC 0F94                           _TRISD 0F95  
                         _TRISE 0F96                           status 0FD8                 __initialization 11A4  
                  __end_of_main 1120                          ??_main 0005                   __activetblptr 0000  
                        _CCP1M2 7DEA                          _CCP1M3 7DEB                          _EEADRH 0FAA  
                        _EEDATA 0FA8                          _CCPR1L 0FBE                          _EECON2 0FA7  
                        _ANSELH 0F7F                          _TABLAT 0FF5                          _OSCCON 0FD3  
                        _TMR2ON 7E52                          _TRISD0 7CA8                          _TRISC2 7CA2  
                        _TRISD1 7CA9                          isa$std 0001                  _PWM_Duty_cycle 1120  
                  __mediumconst 0000               _SYSTEM_Initialize 1190                      __accesstop 0060  
       __end_of__initialization 11A4              ?_SYSTEM_Initialize 0001                   ___rparam_used 0001  
                __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001          __end_of_PWM_Duty_cycle 1160  
     __end_of_SYSTEM_Initialize 119A                 ?_PWM_Duty_cycle 0001                         _T2CKPS0 7E50  
                       _T2CKPS1 7E51                         _TBLPTRH 0FF7                         _TBLPTRL 0FF6  
                       _TBLPTRU 0FF8                         _OSCTUNE 0F9B                         __Hparam 0000  
                       __Lparam 0000                    __psmallconst 1000                         __pcinit 11A4  
                       __ramtop 1000                         __ptext0 1002                         __ptext1 1190  
                       __ptext2 1160                         __ptext3 119A                         __ptext4 1120  
         _OSCILLATOR_Initialize 119A        ??_PIN_MANAGER_Initialize 0001            end_of_initialization 11A4  
                     _PORTDbits 0F83                     _CCP1CONbits 0FBD          ?_OSCILLATOR_Initialize 0001  
           start_initialization 11A4            PWM_Duty_cycle@DC_val 0001                ??_PWM_Duty_cycle 0003  
        _PIN_MANAGER_Initialize 1160                     __smallconst 1000                        _PIR2bits 0FA1  
                   _INTCON2bits 0FF1                      _EECON1bits 0FA6                        __Hrparam 0000  
                      __Lrparam 0000         ??_OSCILLATOR_Initialize 0001                        isa$xinst 0000  
                    _INTCONbits 0FF2         ?_PIN_MANAGER_Initialize 0001  __end_of_PIN_MANAGER_Initialize 1190  
